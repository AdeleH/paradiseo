.TH "moTS" 3 "20 Apr 2007" "Version 0.1" "PARADISEO-MO" \" -*- nroff -*-
.ad l
.nh
.SH NAME
moTS \- Tabu Search (TS).  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <moTS.h>\fP
.PP
Inherits \fBmoAlgo< M::EOType >\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmoTS\fP (\fBmoMoveInit\fP< M > &__move_init, \fBmoNextMove\fP< M > &__next_move, \fBmoMoveIncrEval\fP< M > &__incr_eval, \fBmoTabuList\fP< M > &__tabu_list, \fBmoAspirCrit\fP< M > &__aspir_crit, \fBmoSolContinue\fP< \fBEOT\fP > &__cont, \fBeoEvalFunc\fP< \fBEOT\fP > &__full_eval)"
.br
.RI "\fIConstructor of a \fBmoTS\fP specifying all the boxes. \fP"
.ti -1c
.RI "\fBmoTS\fP (\fBmoMoveExpl\fP< M > &__move_expl, \fBmoSolContinue\fP< \fBEOT\fP > &__cont, \fBeoEvalFunc\fP< \fBEOT\fP > &__full_eval)"
.br
.RI "\fIConstructor with less parameters. \fP"
.ti -1c
.RI "bool \fBoperator()\fP (\fBEOT\fP &__sol)"
.br
.RI "\fI\fBFunction\fP which launchs the Tabu Search. \fP"
.in -1c
.SS "Private Types"

.in +1c
.ti -1c
.RI "typedef M::EOType \fBEOT\fP"
.br
.RI "\fIAlias for the type. \fP"
.ti -1c
.RI "typedef EOT::Fitness \fBFitness\fP"
.br
.RI "\fIAlias for the fitness. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBmoMoveExpl\fP< M > & \fBmove_expl\fP"
.br
.RI "\fINeighborhood explorer. \fP"
.ti -1c
.RI "\fBmoSolContinue\fP< \fBEOT\fP > & \fBcont\fP"
.br
.RI "\fIStop criterion. \fP"
.ti -1c
.RI "\fBeoEvalFunc\fP< \fBEOT\fP > & \fBfull_eval\fP"
.br
.RI "\fIFull evaluation function. \fP"
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static bool \fBfirst_time\fP"
.br
.RI "\fIBoolean allowing to initialise the ptread_mutex_t in the constructor. \fP"
.ti -1c
.RI "static pthread_mutex_t \fBmutex\fP"
.br
.RI "\fIThe lock. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class M> class moTS< M >"
Tabu Search (TS). 

Generic algorithm that describes a tabu search. 
.PP
Definition at line 30 of file moTS.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class M> \fBmoTS\fP< M >::\fBmoTS\fP (\fBmoMoveInit\fP< M > & __move_init, \fBmoNextMove\fP< M > & __next_move, \fBmoMoveIncrEval\fP< M > & __incr_eval, \fBmoTabuList\fP< M > & __tabu_list, \fBmoAspirCrit\fP< M > & __aspir_crit, \fBmoSolContinue\fP< \fBEOT\fP > & __cont, \fBeoEvalFunc\fP< \fBEOT\fP > & __full_eval)\fC [inline]\fP"
.PP
Constructor of a \fBmoTS\fP specifying all the boxes. 
.PP
In this constructor, a \fBmoTSMoveLoopExpl\fP is instanciated.
.PP
\fBParameters:\fP
.RS 4
\fI__move_init\fP move initialisation 
.br
\fI__next_move\fP neighborhood explorer 
.br
\fI__incr_eval\fP efficient evaluation 
.br
\fI__tabu_list\fP tabu list 
.br
\fI__aspir_crit\fP aspiration criterion 
.br
\fI__cont\fP stop criterion 
.br
\fI__full_eval\fP full evaluation function 
.RE
.PP

.PP
Definition at line 59 of file moTS.h.
.PP
References moTS< M >::first_time, and moTS< M >::mutex.
.SS "template<class M> \fBmoTS\fP< M >::\fBmoTS\fP (\fBmoMoveExpl\fP< M > & __move_expl, \fBmoSolContinue\fP< \fBEOT\fP > & __cont, \fBeoEvalFunc\fP< \fBEOT\fP > & __full_eval)\fC [inline]\fP"
.PP
Constructor with less parameters. 
.PP
The explorer is given in the parameters.
.PP
\fBParameters:\fP
.RS 4
\fI__move_expl\fP the explorer (generally different that a \fBmoTSMoveLoopExpl\fP) 
.br
\fI__cont\fP stop criterion 
.br
\fI__full_eval\fP full evaluation function 
.RE
.PP

.PP
Definition at line 81 of file moTS.h.
.PP
References moTS< M >::first_time, and moTS< M >::mutex.
.SH "Member Function Documentation"
.PP 
.SS "template<class M> bool \fBmoTS\fP< M >::operator() (\fBEOT\fP & __sol)\fC [inline, virtual]\fP"
.PP
\fBFunction\fP which launchs the Tabu Search. 
.PP
Algorithm of the tabu search. As a \fBmoSA\fP or a \fBmoHC\fP, it can be used for HYBRIDATION in an evolutionary algorithm. For security a lock (pthread_mutex_t) is closed during the algorithm.
.PP
\fBParameters:\fP
.RS 4
\fI__sol\fP a solution to improve. 
.RE
.PP
\fBReturns:\fP
.RS 4
TRUE. 
.RE
.PP

.PP
Implements \fBeoUF< M::EOType &, bool >\fP.
.PP
Definition at line 104 of file moTS.h.
.PP
References moTS< M >::cont, moTS< M >::full_eval, moTS< M >::move_expl, and moTS< M >::mutex.

.SH "Author"
.PP 
Generated automatically by Doxygen for PARADISEO-MO from the source code.
