.TH "eoMonitor" 3 "19 Oct 2006" "Version 0.9.4-cvs" "EO" \" -*- nroff -*-
.ad l
.nh
.SH NAME
eoMonitor \- The abstract monitor class is a std::vector of parameter pointers.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <eoMonitor.h>\fP
.PP
Inherits \fBeoF< eoMonitor & >\fP.
.PP
Inherited by \fBeoFileMonitor\fP, \fBeoFileSnapshot\fP, \fBeoStdoutMonitor\fP, \fBeoTimedMonitor\fP, and MonitorWrapper.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBlastCall\fP ()"
.br
.ti -1c
.RI "virtual void \fBadd\fP (const \fBeoParam\fP &_param)"
.br
.RI "\fIAdds a parameter to the monitor. \fP"
.ti -1c
.RI "virtual std::string \fBclassName\fP (void) const "
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "typedef std::vector< const \fBeoParam\fP * >::iterator \fBiterator\fP"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "std::vector< const \fBeoParam\fP * > \fBvec\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
The abstract monitor class is a std::vector of parameter pointers. 

Use either push_back a pointer or add a reference to a parameter. Derived classes will then implement the \fBoperator()(void)\fP which will stream or pipe the current values of the parameters to wherever you want it streamed or piped to. 
.PP
Definition at line 46 of file eoMonitor.h.
.SH "Member Function Documentation"
.PP 
.SS "virtual void eoMonitor::add (const \fBeoParam\fP & _param)\fC [inline, virtual]\fP"
.PP
Adds a parameter to the monitor. 
.PP
It is virtual so you can do some type checking in derived classes if you must. 
.PP
Reimplemented in \fBeoFDCFileSnapshot< EOT >\fP, and \fBeoFileSnapshot\fP.
.PP
Definition at line 56 of file eoMonitor.h.
.PP
Referenced by eoFileSnapshot::add().

.SH "Author"
.PP 
Generated automatically by Doxygen for EO from the source code.
