.TH "moFirstImprSelect" 3 "8 Oct 2007" "Version 1.0" "ParadisEO-MOMovingObjects" \" -*- nroff -*-
.ad l
.nh
.SH NAME
moFirstImprSelect \- One possible \fBmoMoveSelect\fP.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <moFirstImprSelect.h>\fP
.PP
Inherits \fBmoMoveSelect< M >< M >\fP.
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef M::EOType::Fitness \fBFitness\fP"
.br
.RI "\fIAlias for the fitness. \fP"
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBinit\fP (const \fBFitness\fP &__fit)"
.br
.RI "\fIProcedure which initialise the exploration. \fP"
.ti -1c
.RI "bool \fBupdate\fP (const M &__move, const typename M::EOType::Fitness &__fit)"
.br
.RI "\fI\fBFunction\fP that indicates if the current move has not improved the fitness. \fP"
.ti -1c
.RI "void \fBoperator()\fP (M &__move, \fBFitness\fP &__fit)  throw (EmptySelection)"
.br
.RI "\fIProcedure which saved the best move and fitness. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "bool \fBvalid\fP"
.br
.RI "\fIAllow to know if at least one move has improved the solution. \fP"
.ti -1c
.RI "M \fBbest_move\fP"
.br
.RI "\fIBest stored movement. \fP"
.ti -1c
.RI "\fBFitness\fP \fBinit_fit\fP"
.br
.RI "\fIInitial fitness. \fP"
.ti -1c
.RI "\fBFitness\fP \fBbest_fit\fP"
.br
.RI "\fIBest stored fitness. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class M> class moFirstImprSelect< M >"
One possible \fBmoMoveSelect\fP. 

The neighborhood is explored until a move enables an improvment of the current solution. 
.PP
Definition at line 48 of file moFirstImprSelect.h.
.SH "Member Function Documentation"
.PP 
.SS "template<class M> virtual void \fBmoFirstImprSelect\fP< M >::init (const \fBFitness\fP & __fit)\fC [inline, virtual]\fP"
.PP
Procedure which initialise the exploration. 
.PP
It save the current fitness as the initial value for the fitness. 
.PP
Implements \fBmoMoveSelect< M >\fP.
.PP
Definition at line 60 of file moFirstImprSelect.h.
.PP
References moFirstImprSelect< M >::init_fit, and moFirstImprSelect< M >::valid.
.SS "template<class M> bool \fBmoFirstImprSelect\fP< M >::update (const M & __move, const typename M::EOType::Fitness & __fit)\fC [inline]\fP"
.PP
\fBFunction\fP that indicates if the current move has not improved the fitness. 
.PP
If the given fitness enables an improvment, the move (\fBmoMove\fP) should be applied to the current solution.
.PP
\fBParameters:\fP
.RS 4
\fI__move\fP a move. 
.br
\fI__fit\fP a fitness linked to the move. 
.RE
.PP
\fBReturns:\fP
.RS 4
TRUE if the move does not improve the fitness. 
.RE
.PP

.PP
Definition at line 77 of file moFirstImprSelect.h.
.PP
References moFirstImprSelect< M >::best_fit, moFirstImprSelect< M >::best_move, moFirstImprSelect< M >::init_fit, and moFirstImprSelect< M >::valid.
.SS "template<class M> void \fBmoFirstImprSelect\fP< M >::operator() (M & __move, \fBFitness\fP & __fit)  throw (\fBEmptySelection\fP)\fC [inline, virtual]\fP"
.PP
Procedure which saved the best move and fitness. 
.PP
\fBParameters:\fP
.RS 4
\fI__move\fP the current move (result of the procedure). 
.br
\fI__fit\fP the current fitness (result of the procedure). 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fI\fBEmptySelection\fP\fP if no move has improved the fitness. 
.RE
.PP

.PP
Implements \fBeoBF< M &, M::EOType::Fitness &, void >\fP.
.PP
Definition at line 101 of file moFirstImprSelect.h.
.PP
References moFirstImprSelect< M >::best_fit, moFirstImprSelect< M >::best_move, and moFirstImprSelect< M >::valid.

.SH "Author"
.PP 
Generated automatically by Doxygen for ParadisEO-MOMovingObjects from the source code.
