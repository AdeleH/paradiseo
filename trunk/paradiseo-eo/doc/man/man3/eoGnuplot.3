.TH "eoGnuplot" 3 "19 Oct 2006" "Version 0.9.4-cvs" "EO" \" -*- nroff -*-
.ad l
.nh
.SH NAME
eoGnuplot \- Base class for calls to gnuplot.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <eoGnuplot.h>\fP
.PP
Inherited by \fBeoGnuplot1DMonitor\fP, and \fBeoGnuplot1DSnapshot\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBeoGnuplot\fP (std::string _title, std::string _extra=std::string(''))"
.br
.RI "\fIOpen pipe to Gnuplot. \fP"
.ti -1c
.RI "virtual \fB~eoGnuplot\fP ()"
.br
.RI "\fIDestructor. \fP"
.ti -1c
.RI "virtual std::string \fBclassName\fP () const "
.br
.RI "\fIClass name. \fP"
.ti -1c
.RI "void \fBgnuplotCommand\fP (const char *_command)"
.br
.RI "\fISend command to gnuplot. \fP"
.ti -1c
.RI "void \fBgnuplotCommand\fP (std::string _command)"
.br
.RI "\fISend command to gnuplot. \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBinitGnuPlot\fP (std::string _title, std::string _extra)"
.br
.RI "\fIInitialize gnuplot. \fP"
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "bool \fBfirstTime\fP"
.br
.RI "\fIThe stats might be unknown in Ctor. \fP"
.ti -1c
.RI "PCom * \fBgpCom\fP"
.br
.RI "\fICommunication with gnuplot OK. \fP"
.in -1c
.SS "Static Protected Attributes"

.in +1c
.ti -1c
.RI "unsigned \fBnumWindow\fP = 0"
.br
.RI "\fIInternal counter for gnuplot windows. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Base class for calls to gnuplot. 

This class is the abstract class that will be used by further gnuplot calls to plots what is already written by some \fBeoMonitor\fP into a file
.PP
\fBAuthor:\fP
.RS 4
Marc Schoenauer 
.RE
.PP
\fBVersion:\fP
.RS 4
0.0 (2001) 
.RE
.PP

.PP
Definition at line 38 of file eoGnuplot.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "eoGnuplot::eoGnuplot (std::string _title, std::string _extra = \fCstd::string('')\fP)"
.PP
Open pipe to Gnuplot. 
.PP
\fBParameters:\fP
.RS 4
\fI_title\fP Title for gnuplot window. 
.br
\fI_extra\fP Extra parameters to gnuplot (default <none>). 
.RE
.PP

.PP
Definition at line 37 of file eoGnuplot.cpp.
.PP
References initGnuPlot().
.SS "eoGnuplot::~\fBeoGnuplot\fP ()\fC [virtual]\fP"
.PP
Destructor. 
.PP
Close the gnuplot windows if pipe was correctly opened 
.PP
Definition at line 45 of file eoGnuplot.cpp.
.PP
References gpCom.
.SH "Member Function Documentation"
.PP 
.SS "void eoGnuplot::gnuplotCommand (std::string _command)\fC [inline]\fP"
.PP
Send command to gnuplot. 
.PP
This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. 
.PP
Definition at line 66 of file eoGnuplot.h.
.SS "void eoGnuplot::initGnuPlot (std::string _title, std::string _extra)\fC [protected]\fP"
.PP
Initialize gnuplot. 
.PP
\fBParameters:\fP
.RS 4
\fI_title\fP Title for gnuplot window. 
.br
\fI_extra\fP Extra parameters to gnuplot. 
.RE
.PP

.PP
Definition at line 70 of file eoGnuplot.cpp.
.PP
References gpCom, and numWindow.
.PP
Referenced by eoGnuplot().

.SH "Author"
.PP 
Generated automatically by Doxygen for EO from the source code.
