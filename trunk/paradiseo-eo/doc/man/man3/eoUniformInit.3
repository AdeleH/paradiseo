.TH "eoUniformInit" 3 "19 Oct 2006" "Version 0.9.4-cvs" "EO" \" -*- nroff -*-
.ad l
.nh
.SH NAME
eoUniformInit \- The class eoUniformInit can be used in the STL apply function to easily randomize floats and doubles.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <eoUniformInit.h>\fP
.PP
Inherits \fBeoInit< T >\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBeoUniformInit\fP (T _max=T(1.0), \fBeoRng\fP &_rng=rng)"
.br
.RI "\fICtor with only a max bound. \fP"
.ti -1c
.RI "\fBeoUniformInit\fP (\fBeoRealBounds\fP &_bound, \fBeoRng\fP &_rng=rng)"
.br
.RI "\fICtor with an eoRealBound. \fP"
.ti -1c
.RI "\fBeoUniformInit\fP (T _min, T _max, \fBeoRng\fP &_rng=rng)"
.br
.RI "\fICtor with explicit min and max. \fP"
.ti -1c
.RI "void \fBoperator()\fP (T &_t)"
.br
.RI "\fIGenerates the number, uses a static_cast to get the right behaviour for ints and unsigneds. \fP"
.ti -1c
.RI "template<> void \fBoperator()\fP (bool &_b)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "T \fBminim\fP"
.br
.ti -1c
.RI "T \fBrange\fP"
.br
.ti -1c
.RI "\fBeoRng\fP & \fBuniform\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class T = double> class eoUniformInit< T >"
The class eoUniformInit can be used in the STL apply function to easily randomize floats and doubles. 

It can also be used for ints and unsigneds by virtue of the static_cast
.PP
Also present is a specialization for boolean, that will ignore the minima and maxima that are possibly set and will return an unbiased flip of a coin. For a biased flip, use the eoBoolean
.PP
either in [0, _max) if only 1 value (_max) is given (or none, as _max defaults to 1.0) or in [_min,_max) if 2 values are given (_min, _max) 
.PP
Definition at line 62 of file eoUniformInit.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for EO from the source code.
