.TH "eoGeneralBreeder" 3 "19 Oct 2006" "Version 0.9.4-cvs" "EO" \" -*- nroff -*-
.ad l
.nh
.SH NAME
eoGeneralBreeder \- Base class for breeders using generalized operators.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <eoGeneralBreeder.h>\fP
.PP
Inherits \fBeoBreed< EOT >< EOT >\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBeoGeneralBreeder\fP (\fBeoSelectOne\fP< \fBEOT\fP > &_select, \fBeoGenOp\fP< \fBEOT\fP > &_op, double _rate=1.0, bool _interpret_as_rate=true)"
.br
.RI "\fICtor:. \fP"
.ti -1c
.RI "\fBeoGeneralBreeder\fP (\fBeoSelectOne\fP< \fBEOT\fP > &_select, \fBeoGenOp\fP< \fBEOT\fP > &_op, \fBeoHowMany\fP _howMany)"
.br
.RI "\fICtor:. \fP"
.ti -1c
.RI "void \fBoperator()\fP (const \fBeoPop\fP< \fBEOT\fP > &_parents, \fBeoPop\fP< \fBEOT\fP > &_offspring)"
.br
.RI "\fIThe breeder: simply calls the genOp on a selective populator! \fP"
.ti -1c
.RI "virtual std::string \fBclassName\fP () const "
.br
.RI "\fIThe class name. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBeoSelectOne\fP< \fBEOT\fP > & \fBselect\fP"
.br
.ti -1c
.RI "\fBeoGenOp\fP< \fBEOT\fP > & \fBop\fP"
.br
.ti -1c
.RI "\fBeoHowMany\fP \fBhowMany\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class EOT> class eoGeneralBreeder< EOT >"
Base class for breeders using generalized operators. 
.PP
Definition at line 46 of file eoGeneralBreeder.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class EOT> \fBeoGeneralBreeder\fP< \fBEOT\fP >::\fBeoGeneralBreeder\fP (\fBeoSelectOne\fP< \fBEOT\fP > & _select, \fBeoGenOp\fP< \fBEOT\fP > & _op, double _rate = \fC1.0\fP, bool _interpret_as_rate = \fCtrue\fP)\fC [inline]\fP"
.PP
Ctor:. 
.PP
\fBParameters:\fP
.RS 4
\fI_select\fP a selectoOne, to be used for all selections 
.br
\fI_op\fP a general operator (will generally be an \fBeoOpContainer\fP) 
.br
\fI_rate\fP pour howMany, le nbre d'enfants a generer 
.br
\fI_interpret_as_rate\fP \fCexplanation\fP 
.RE
.PP

.PP
Definition at line 56 of file eoGeneralBreeder.h.
.SS "template<class EOT> \fBeoGeneralBreeder\fP< \fBEOT\fP >::\fBeoGeneralBreeder\fP (\fBeoSelectOne\fP< \fBEOT\fP > & _select, \fBeoGenOp\fP< \fBEOT\fP > & _op, \fBeoHowMany\fP _howMany)\fC [inline]\fP"
.PP
Ctor:. 
.PP
\fBParameters:\fP
.RS 4
\fI_select\fP a selectoOne, to be used for all selections 
.br
\fI_op\fP a general operator (will generally be an \fBeoOpContainer\fP) 
.br
\fI_howMany\fP an \fBeoHowMany\fP \fCexplanation\fP 
.RE
.PP

.PP
Definition at line 69 of file eoGeneralBreeder.h.
.SH "Member Function Documentation"
.PP 
.SS "template<class EOT> void \fBeoGeneralBreeder\fP< \fBEOT\fP >::operator() (const \fBeoPop\fP< \fBEOT\fP > & _parents, \fBeoPop\fP< \fBEOT\fP > & _offspring)\fC [inline, virtual]\fP"
.PP
The breeder: simply calls the genOp on a selective populator! 
.PP
\fBParameters:\fP
.RS 4
\fI_parents\fP the initial population 
.br
\fI_offspring\fP the resulting population (content -if any- is lost) 
.RE
.PP

.PP
Implements \fBeoBF< const eoPop< EOT > &, eoPop< EOT > &, void >\fP.
.PP
Definition at line 80 of file eoGeneralBreeder.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for EO from the source code.
