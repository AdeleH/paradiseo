<?xml version='1.0' encoding='ISO-8859-1' standalone='yes' ?>
<tagfile>
  <compound kind="page">
    <name>main</name>
    <title>The ParadisEO Framework</title>
    <filename>main</filename>
    <docanchor file="main">parallel_local_searches</docanchor>
    <docanchor file="main">parallel_metaheuristics</docanchor>
    <docanchor file="main">paradiseo_goals</docanchor>
    <docanchor file="main">hybridization</docanchor>
    <docanchor file="main">intro</docanchor>
    <docanchor file="main">parallel_distributed</docanchor>
    <docanchor file="main">parallel_ls</docanchor>
    <docanchor file="main">architecture</docanchor>
    <docanchor file="main">local_searches</docanchor>
    <docanchor file="main">motivation</docanchor>
  </compound>
  <compound kind="class">
    <name>CitySwap</name>
    <filename>class_city_swap.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>class_city_swap.html</anchorfile>
      <anchor>7e6958b62048c89604cbf046b86bdf2d</anchor>
      <arglist>(Route &amp;__route)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Communicable</name>
    <filename>class_communicable.html</filename>
    <member kind="function">
      <type></type>
      <name>Communicable</name>
      <anchorfile>class_communicable.html</anchorfile>
      <anchor>8ae1827ecf7569b3db1ed386c7d8ad78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Communicable</name>
      <anchorfile>class_communicable.html</anchorfile>
      <anchor>2280b0dfa0d3a515fccf62c2a9fd5f41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>COMM_ID</type>
      <name>getKey</name>
      <anchorfile>class_communicable.html</anchorfile>
      <anchor>db4307b69b9ccacff55fdbf84b8f50e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>class_communicable.html</anchorfile>
      <anchor>e1f8bd1ee810fd73d44315c95998d19d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>class_communicable.html</anchorfile>
      <anchor>caa814847192e71f434fbf9479ede862</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>class_communicable.html</anchorfile>
      <anchor>cb53e6534b947bc889aa181d9dbbd13b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resume</name>
      <anchorfile>class_communicable.html</anchorfile>
      <anchor>3306a9adb11a0ab5af342c0db9f7bb2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>COMM_ID</type>
      <name>key</name>
      <anchorfile>class_communicable.html</anchorfile>
      <anchor>605b0efeffe81326f216c9903f5bbf4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>sem_t</type>
      <name>sem_lock</name>
      <anchorfile>class_communicable.html</anchorfile>
      <anchor>cf9639312f71a2f348bc1e7789ccbd9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>sem_t</type>
      <name>sem_stop</name>
      <anchorfile>class_communicable.html</anchorfile>
      <anchor>29c53b9191348e0505e3bcba6d8b82b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static unsigned</type>
      <name>num_comm</name>
      <anchorfile>class_communicable.html</anchorfile>
      <anchor>7a6acfdc781a67c9c0ec4f17893f86c3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Communicator</name>
    <filename>class_communicator.html</filename>
    <base>ReactiveThread</base>
    <member kind="function">
      <type></type>
      <name>Communicator</name>
      <anchorfile>class_communicator.html</anchorfile>
      <anchor>7c9dce4ea92bd04d01d53f80c0ef08ee</anchor>
      <arglist>(int *__argc, char ***__argv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>class_communicator.html</anchorfile>
      <anchor>142fae13b16b166519315f248a513c62</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cooperative</name>
    <filename>class_cooperative.html</filename>
    <base>Communicable</base>
    <member kind="function">
      <type>Runner *</type>
      <name>getOwner</name>
      <anchorfile>class_cooperative.html</anchorfile>
      <anchor>4012b4e8329e87d26ee266491e1a883e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOwner</name>
      <anchorfile>class_cooperative.html</anchorfile>
      <anchor>fe7b022567174c8305bc78d8c5749b12</anchor>
      <arglist>(Runner &amp;__runner)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>pack</name>
      <anchorfile>class_cooperative.html</anchorfile>
      <anchor>6a4848c94031289df281a571ea427d46</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unpack</name>
      <anchorfile>class_cooperative.html</anchorfile>
      <anchor>7c31a68fb29e0a9cbe1da8019e4cdafa</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>class_cooperative.html</anchorfile>
      <anchor>c609f2a1200da7d1ac96005602515fc6</anchor>
      <arglist>(Cooperative *__coop)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifySending</name>
      <anchorfile>class_cooperative.html</anchorfile>
      <anchor>4439ddeaa1246a2e44c003bfb781739b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Runner *</type>
      <name>owner</name>
      <anchorfile>class_cooperative.html</anchorfile>
      <anchor>7604f094479d08154ede4996a45bf79e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DisplayBestRoute</name>
    <filename>class_display_best_route.html</filename>
    <member kind="function">
      <type></type>
      <name>DisplayBestRoute</name>
      <anchorfile>class_display_best_route.html</anchorfile>
      <anchor>db263e38f1e82174f811bf62f323f87f</anchor>
      <arglist>(eoPop&lt; Route &gt; &amp;__pop)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>class_display_best_route.html</anchorfile>
      <anchor>ee879344a6d8b81a04d4eabbed2c7a04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoPop&lt; Route &gt; &amp;</type>
      <name>pop</name>
      <anchorfile>class_display_best_route.html</anchorfile>
      <anchor>5270aabbf294d2deca9878934216eb89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EdgeXover</name>
    <filename>class_edge_xover.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>class_edge_xover.html</anchorfile>
      <anchor>cb1c0a103106a4d3319540cb23163a79</anchor>
      <arglist>(Route &amp;__route1, Route &amp;__route2)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>cross</name>
      <anchorfile>class_edge_xover.html</anchorfile>
      <anchor>88c2d4c9a878454a32d56010f3dddc27</anchor>
      <arglist>(const Route &amp;__par1, const Route &amp;__par2, Route &amp;__child)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>remove_entry</name>
      <anchorfile>class_edge_xover.html</anchorfile>
      <anchor>1b3a4c75dd9a034c81af6d89d85d30f5</anchor>
      <arglist>(unsigned __vertex, std::vector&lt; std::set&lt; unsigned &gt; &gt; &amp;__map)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>build_map</name>
      <anchorfile>class_edge_xover.html</anchorfile>
      <anchor>04de96aa1016836e0ba5f4b952a5fa16</anchor>
      <arglist>(const Route &amp;__par1, const Route &amp;__par2)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>add_vertex</name>
      <anchorfile>class_edge_xover.html</anchorfile>
      <anchor>2d3045ef503d8b16a27e11fdc23ca11c</anchor>
      <arglist>(unsigned __vertex, Route &amp;__child)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::set&lt; unsigned &gt; &gt;</type>
      <name>_map</name>
      <anchorfile>class_edge_xover.html</anchorfile>
      <anchor>d41399c6effb54ee48c722f1e19cb3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; bool &gt;</type>
      <name>visited</name>
      <anchorfile>class_edge_xover.html</anchorfile>
      <anchor>46d4d4724cf6d660b1a7ab4a346573d4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MergeRouteEval</name>
    <filename>class_merge_route_eval.html</filename>
    <base>peoAggEvalFunc</base>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>class_merge_route_eval.html</anchorfile>
      <anchor>29cb0028ac0df4b2cee3a809c8f35dea</anchor>
      <arglist>(Route &amp;__route, const int &amp;__part_fit)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Node</name>
    <filename>struct_node.html</filename>
    <member kind="variable">
      <type>RANK_ID</type>
      <name>rk</name>
      <anchorfile>struct_node.html</anchorfile>
      <anchor>7de6f254b6b8c3f9f8287af0bb742e9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>struct_node.html</anchorfile>
      <anchor>3c4318d71ca9a44fe33edcf8b7f26863</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>num_workers</name>
      <anchorfile>struct_node.html</anchorfile>
      <anchor>01fec86d75332858b158c810d57caee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rk_sched</name>
      <anchorfile>struct_node.html</anchorfile>
      <anchor>98deed2036c3dd8fc0f4fe8dacf56a92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; RUNNER_ID &gt;</type>
      <name>id_run</name>
      <anchorfile>struct_node.html</anchorfile>
      <anchor>a90013b890888d3d252a71cb4fe48934</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OrderXover</name>
    <filename>class_order_xover.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>class_order_xover.html</anchorfile>
      <anchor>0ff6aada669eb8173322ed68cda1ac61</anchor>
      <arglist>(Route &amp;__route1, Route &amp;__route2)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>cross</name>
      <anchorfile>class_order_xover.html</anchorfile>
      <anchor>d2bf90b5f46ac4a344777e17bc5f364d</anchor>
      <arglist>(const Route &amp;__par1, const Route &amp;__par2, Route &amp;__child)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PartialMappedXover</name>
    <filename>class_partial_mapped_xover.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>class_partial_mapped_xover.html</anchorfile>
      <anchor>1cda6ea86ca36e5de0125f4ba5cfc695</anchor>
      <arglist>(Route &amp;__route1, Route &amp;__route2)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>repair</name>
      <anchorfile>class_partial_mapped_xover.html</anchorfile>
      <anchor>b6d4035544aff3b2b3fe4b0eeea185a2</anchor>
      <arglist>(Route &amp;__route, unsigned __cut1, unsigned __cut2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PartRouteEval</name>
    <filename>class_part_route_eval.html</filename>
    <member kind="function">
      <type></type>
      <name>PartRouteEval</name>
      <anchorfile>class_part_route_eval.html</anchorfile>
      <anchor>a331566b29bc3227f377004232f05491</anchor>
      <arglist>(float __from, float __to)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>class_part_route_eval.html</anchorfile>
      <anchor>965fab875fb601f17934a6ece761beae</anchor>
      <arglist>(Route &amp;__route)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float</type>
      <name>from</name>
      <anchorfile>class_part_route_eval.html</anchorfile>
      <anchor>5bde722e66378b2570ae6c4b4f8df58e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float</type>
      <name>to</name>
      <anchorfile>class_part_route_eval.html</anchorfile>
      <anchor>de53cc919faa498663f327b72c357da3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>peoAggEvalFunc</name>
    <filename>classpeo_agg_eval_func.html</filename>
    <templarg>EOT</templarg>
  </compound>
  <compound kind="class">
    <name>peoAsyncIslandMig</name>
    <filename>classpeo_async_island_mig.html</filename>
    <templarg>EOT</templarg>
    <base>Cooperative</base>
    <member kind="function">
      <type></type>
      <name>peoAsyncIslandMig</name>
      <anchorfile>classpeo_async_island_mig.html</anchorfile>
      <anchor>e0f706cbf4148d3ca327227a5c7a9fdf</anchor>
      <arglist>(eoContinue&lt; EOT &gt; &amp;__cont, eoSelect&lt; EOT &gt; &amp;__select, eoReplacement&lt; EOT &gt; &amp;__replace, Topology &amp;__topology, eoPop&lt; EOT &gt; &amp;__source, eoPop&lt; EOT &gt; &amp;__destination)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classpeo_async_island_mig.html</anchorfile>
      <anchor>13581e54425727a7f785ca8a6df527b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack</name>
      <anchorfile>classpeo_async_island_mig.html</anchorfile>
      <anchor>6d790a5d0b6ac510cac4f61a1c0d8f16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpack</name>
      <anchorfile>classpeo_async_island_mig.html</anchorfile>
      <anchor>455501aee5db2bbfbae15779c8429369</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>emigrate</name>
      <anchorfile>classpeo_async_island_mig.html</anchorfile>
      <anchor>87a4ef7d4bd30d349a801bf0f9e87c82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>immigrate</name>
      <anchorfile>classpeo_async_island_mig.html</anchorfile>
      <anchor>5a9a64ba51a696e45f91b362c39c9a64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoContinue&lt; EOT &gt; &amp;</type>
      <name>cont</name>
      <anchorfile>classpeo_async_island_mig.html</anchorfile>
      <anchor>2fc077d02ef9ea4595cfe883af0d4f83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoSelect&lt; EOT &gt; &amp;</type>
      <name>select</name>
      <anchorfile>classpeo_async_island_mig.html</anchorfile>
      <anchor>b1fa045094c8a411323e75b5820c80c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoReplacement&lt; EOT &gt; &amp;</type>
      <name>replace</name>
      <anchorfile>classpeo_async_island_mig.html</anchorfile>
      <anchor>b761dbd880ee32e170741ecd78da6f48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Topology &amp;</type>
      <name>topology</name>
      <anchorfile>classpeo_async_island_mig.html</anchorfile>
      <anchor>e45e5a808a96f0853ab6ba42339fe679</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoPop&lt; EOT &gt; &amp;</type>
      <name>source</name>
      <anchorfile>classpeo_async_island_mig.html</anchorfile>
      <anchor>8a502d82c773033e274dca932fc2d4ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoPop&lt; EOT &gt; &amp;</type>
      <name>destination</name>
      <anchorfile>classpeo_async_island_mig.html</anchorfile>
      <anchor>e407f411d08ae7d96992603c145a7e43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::queue&lt; eoPop&lt; EOT &gt; &gt;</type>
      <name>imm</name>
      <anchorfile>classpeo_async_island_mig.html</anchorfile>
      <anchor>b8c76d98d9ae99dd930a77c12860519a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::queue&lt; eoPop&lt; EOT &gt; &gt;</type>
      <name>em</name>
      <anchorfile>classpeo_async_island_mig.html</anchorfile>
      <anchor>a9cc0e2d61cac6e11647b141962adc89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::queue&lt; Cooperative * &gt;</type>
      <name>coop_em</name>
      <anchorfile>classpeo_async_island_mig.html</anchorfile>
      <anchor>1a2c0004d23bc303420af137a8c8bd27</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>peoEA</name>
    <filename>classpeo_e_a.html</filename>
    <templarg>EOT</templarg>
    <base>Runner</base>
    <member kind="function">
      <type></type>
      <name>peoEA</name>
      <anchorfile>classpeo_e_a.html</anchorfile>
      <anchor>dbfc4f8907bef234602149229f132371</anchor>
      <arglist>(eoContinue&lt; EOT &gt; &amp;__cont, peoPopEval&lt; EOT &gt; &amp;__pop_eval, eoSelect&lt; EOT &gt; &amp;__select, peoTransform&lt; EOT &gt; &amp;__trans, eoReplacement&lt; EOT &gt; &amp;__replace)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classpeo_e_a.html</anchorfile>
      <anchor>6ab8c321d29350634143a2a01cf2ad24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classpeo_e_a.html</anchorfile>
      <anchor>3c709e3b2491147d26fee36138644613</anchor>
      <arglist>(eoPop&lt; EOT &gt; &amp;__pop)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoContinue&lt; EOT &gt; &amp;</type>
      <name>cont</name>
      <anchorfile>classpeo_e_a.html</anchorfile>
      <anchor>5f015eebf42f176b9fe322488c446c2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>peoPopEval&lt; EOT &gt; &amp;</type>
      <name>pop_eval</name>
      <anchorfile>classpeo_e_a.html</anchorfile>
      <anchor>9140259f50c9186edcb062b023624c96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoSelect&lt; EOT &gt; &amp;</type>
      <name>select</name>
      <anchorfile>classpeo_e_a.html</anchorfile>
      <anchor>2d8428d69fdd6aefefbaf543fdd46d19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>peoTransform&lt; EOT &gt; &amp;</type>
      <name>trans</name>
      <anchorfile>classpeo_e_a.html</anchorfile>
      <anchor>713c77935eb8aafebfb9488cfaa4a363</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoReplacement&lt; EOT &gt; &amp;</type>
      <name>replace</name>
      <anchorfile>classpeo_e_a.html</anchorfile>
      <anchor>9bd2d4356cf7e69e3141dc269213aa8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoPop&lt; EOT &gt; *</type>
      <name>pop</name>
      <anchorfile>classpeo_e_a.html</anchorfile>
      <anchor>c0b110e410bc16283e8339f24b733772</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>peoNoAggEvalFunc</name>
    <filename>classpeo_no_agg_eval_func.html</filename>
    <templarg>EOT</templarg>
    <base>peoAggEvalFunc</base>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classpeo_no_agg_eval_func.html</anchorfile>
      <anchor>1a69ee1af8745ac75c864bf884436de5</anchor>
      <arglist>(EOT &amp;__sol, const typename EOT::Fitness &amp;__fit)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>peoParaPopEval</name>
    <filename>classpeo_para_pop_eval.html</filename>
    <templarg>EOT</templarg>
    <base>peoPopEval</base>
    <member kind="function">
      <type></type>
      <name>peoParaPopEval</name>
      <anchorfile>classpeo_para_pop_eval.html</anchorfile>
      <anchor>bcb540510a7038520bec41a7af332daf</anchor>
      <arglist>(eoEvalFunc&lt; EOT &gt; &amp;__eval_func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>peoParaPopEval</name>
      <anchorfile>classpeo_para_pop_eval.html</anchorfile>
      <anchor>1cc13a1ec366f95d219d682eccb455bc</anchor>
      <arglist>(const std::vector&lt; eoEvalFunc&lt; EOT &gt; * &gt; &amp;__funcs, peoAggEvalFunc&lt; EOT &gt; &amp;__merge_eval)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classpeo_para_pop_eval.html</anchorfile>
      <anchor>aeaa4fca4f8650e453e308838b4a2cb5</anchor>
      <arglist>(eoPop&lt; EOT &gt; &amp;__pop)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packData</name>
      <anchorfile>classpeo_para_pop_eval.html</anchorfile>
      <anchor>fea632bd645ab11182782fd3c038d6d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpackData</name>
      <anchorfile>classpeo_para_pop_eval.html</anchorfile>
      <anchor>410bf4c173e2f36df82251cb16ce1b05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>execute</name>
      <anchorfile>classpeo_para_pop_eval.html</anchorfile>
      <anchor>3af76378611eac5a36da9a0a00aeeb6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packResult</name>
      <anchorfile>classpeo_para_pop_eval.html</anchorfile>
      <anchor>24bb4ae84b0b9f64e7170e3d2b0e1223</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpackResult</name>
      <anchorfile>classpeo_para_pop_eval.html</anchorfile>
      <anchor>fd7f0afe9cba30be39269d16097e190e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifySendingData</name>
      <anchorfile>classpeo_para_pop_eval.html</anchorfile>
      <anchor>1f78c3cec2940af08a059cc1aa96a9c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifySendingAllResourceRequests</name>
      <anchorfile>classpeo_para_pop_eval.html</anchorfile>
      <anchor>b77031fc4807921ffaf7cf6b669a7665</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const std::vector&lt; eoEvalFunc&lt; EOT &gt; * &gt; &amp;</type>
      <name>funcs</name>
      <anchorfile>classpeo_para_pop_eval.html</anchorfile>
      <anchor>6d69b8f73c0b5d72baf75d6e53f025b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; eoEvalFunc&lt; EOT &gt; * &gt;</type>
      <name>one_func</name>
      <anchorfile>classpeo_para_pop_eval.html</anchorfile>
      <anchor>f0e8af3ee442d2b6baf0bd122226be3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>peoAggEvalFunc&lt; EOT &gt; &amp;</type>
      <name>merge_eval</name>
      <anchorfile>classpeo_para_pop_eval.html</anchorfile>
      <anchor>b48bcd4e9f92f364118304535c089456</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>peoNoAggEvalFunc&lt; EOT &gt;</type>
      <name>no_merge_eval</name>
      <anchorfile>classpeo_para_pop_eval.html</anchorfile>
      <anchor>bf255dd5861e27108c2abae7309d7690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::queue&lt; EOT * &gt;</type>
      <name>tasks</name>
      <anchorfile>classpeo_para_pop_eval.html</anchorfile>
      <anchor>af76cd18368a0f6185878f37f0b5f272</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; EOT *, std::pair&lt; unsigned, unsigned &gt; &gt;</type>
      <name>progression</name>
      <anchorfile>classpeo_para_pop_eval.html</anchorfile>
      <anchor>80e7e34bb1bb2d12f1f2eed3feac6ecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned</type>
      <name>num_func</name>
      <anchorfile>classpeo_para_pop_eval.html</anchorfile>
      <anchor>87abb090c0de39f0ccc36af1f07cca0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EOT</type>
      <name>sol</name>
      <anchorfile>classpeo_para_pop_eval.html</anchorfile>
      <anchor>fb6941e0455515a908eb82342b995163</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EOT *</type>
      <name>ad_sol</name>
      <anchorfile>classpeo_para_pop_eval.html</anchorfile>
      <anchor>60cafeab376262af675fdff43434c8d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned</type>
      <name>total</name>
      <anchorfile>classpeo_para_pop_eval.html</anchorfile>
      <anchor>b528ad9dd9006c3dd57f149a3843e57d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>peoParaSGATransform</name>
    <filename>classpeo_para_s_g_a_transform.html</filename>
    <templarg>EOT</templarg>
    <base>peoTransform</base>
    <member kind="function">
      <type></type>
      <name>peoParaSGATransform</name>
      <anchorfile>classpeo_para_s_g_a_transform.html</anchorfile>
      <anchor>2052bca82fbbfe5455bf6f69246d4dbf</anchor>
      <arglist>(eoQuadOp&lt; EOT &gt; &amp;__cross, double __cross_rate, eoMonOp&lt; EOT &gt; &amp;__mut, double __mut_rate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classpeo_para_s_g_a_transform.html</anchorfile>
      <anchor>669de7f7c6316fa745a15b909efb6527</anchor>
      <arglist>(eoPop&lt; EOT &gt; &amp;__pop)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packData</name>
      <anchorfile>classpeo_para_s_g_a_transform.html</anchorfile>
      <anchor>fd278bcde58d29c9a343d5cbead81a1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpackData</name>
      <anchorfile>classpeo_para_s_g_a_transform.html</anchorfile>
      <anchor>a43a487a6e81791c8bbf6ce30f4336ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>execute</name>
      <anchorfile>classpeo_para_s_g_a_transform.html</anchorfile>
      <anchor>c9de2100fb897177a401c634002f6dd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packResult</name>
      <anchorfile>classpeo_para_s_g_a_transform.html</anchorfile>
      <anchor>ba08e224ceaa4149e8e1a88694a2ccf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpackResult</name>
      <anchorfile>classpeo_para_s_g_a_transform.html</anchorfile>
      <anchor>257663dcdc6cc95b6183d472ffba1b2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifySendingData</name>
      <anchorfile>classpeo_para_s_g_a_transform.html</anchorfile>
      <anchor>4e19dfc22b6f69fa8b93537226551866</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifySendingAllResourceRequests</name>
      <anchorfile>classpeo_para_s_g_a_transform.html</anchorfile>
      <anchor>8a0316e33897c395a81787f59ea7a1c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoQuadOp&lt; EOT &gt; &amp;</type>
      <name>cross</name>
      <anchorfile>classpeo_para_s_g_a_transform.html</anchorfile>
      <anchor>c6f97deabe7502c84f5b6c479013f6dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>cross_rate</name>
      <anchorfile>classpeo_para_s_g_a_transform.html</anchorfile>
      <anchor>dfcf216e2df05016db4d57a5ffb0b0e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoMonOp&lt; EOT &gt; &amp;</type>
      <name>mut</name>
      <anchorfile>classpeo_para_s_g_a_transform.html</anchorfile>
      <anchor>34ff5f9d285ca4879cf8865fb425a311</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mut_rate</name>
      <anchorfile>classpeo_para_s_g_a_transform.html</anchorfile>
      <anchor>b9d3a2094737d0bbd034aac942cc53e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned</type>
      <name>idx</name>
      <anchorfile>classpeo_para_s_g_a_transform.html</anchorfile>
      <anchor>03972feadc86626e58fe60bd4061b57e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoPop&lt; EOT &gt; *</type>
      <name>pop</name>
      <anchorfile>classpeo_para_s_g_a_transform.html</anchorfile>
      <anchor>94e10a1285e128aba6e71517c941f961</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EOT</type>
      <name>father</name>
      <anchorfile>classpeo_para_s_g_a_transform.html</anchorfile>
      <anchor>9ef60190e2e3bd5961a93d1b52cb275d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EOT</type>
      <name>mother</name>
      <anchorfile>classpeo_para_s_g_a_transform.html</anchorfile>
      <anchor>e991ad2af6d116afd855de2db46e1d27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned</type>
      <name>num_term</name>
      <anchorfile>classpeo_para_s_g_a_transform.html</anchorfile>
      <anchor>589ea7cd72d522ae51a07de4d8ffbf11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>peoPopEval</name>
    <filename>classpeo_pop_eval.html</filename>
    <templarg>EOT</templarg>
    <base>Service</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>classpeo_pop_eval.html</anchorfile>
      <anchor>2f208067a5e39c3b26c1234050a41e8f</anchor>
      <arglist>(eoPop&lt; EOT &gt; &amp;__pop)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>peoSeqPopEval</name>
    <filename>classpeo_seq_pop_eval.html</filename>
    <templarg>EOT</templarg>
    <base>peoPopEval</base>
    <member kind="function">
      <type></type>
      <name>peoSeqPopEval</name>
      <anchorfile>classpeo_seq_pop_eval.html</anchorfile>
      <anchor>a41f91ab4b2aeb325ff75feb66d4e003</anchor>
      <arglist>(eoEvalFunc&lt; EOT &gt; &amp;__eval)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classpeo_seq_pop_eval.html</anchorfile>
      <anchor>b2c88b9a3ad9091949acf741844eb02f</anchor>
      <arglist>(eoPop&lt; EOT &gt; &amp;__pop)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoEvalFunc&lt; EOT &gt; &amp;</type>
      <name>eval</name>
      <anchorfile>classpeo_seq_pop_eval.html</anchorfile>
      <anchor>5465f31386c6b96bc8f7fb9393a28a2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>peoSeqTransform</name>
    <filename>classpeo_seq_transform.html</filename>
    <templarg>EOT</templarg>
    <base>peoTransform</base>
    <member kind="function">
      <type></type>
      <name>peoSeqTransform</name>
      <anchorfile>classpeo_seq_transform.html</anchorfile>
      <anchor>3b8e4ed19d9458938eb669d83a53c626</anchor>
      <arglist>(eoTransform&lt; EOT &gt; &amp;__trans)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classpeo_seq_transform.html</anchorfile>
      <anchor>1ba63536abb6c4e1c369e0b7e066872e</anchor>
      <arglist>(eoPop&lt; EOT &gt; &amp;__pop)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packData</name>
      <anchorfile>classpeo_seq_transform.html</anchorfile>
      <anchor>c4bf2724e9f6055f12bd169fad893be3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackData</name>
      <anchorfile>classpeo_seq_transform.html</anchorfile>
      <anchor>24e6cf15ef230ed538031b522ddd4ae6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>execute</name>
      <anchorfile>classpeo_seq_transform.html</anchorfile>
      <anchor>0294a2f9d6b44ec74d22eaceccdffc2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packResult</name>
      <anchorfile>classpeo_seq_transform.html</anchorfile>
      <anchor>4861c61f9e46d83964ea8a156a9a3ee0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackResult</name>
      <anchorfile>classpeo_seq_transform.html</anchorfile>
      <anchor>5dd029fc011eb2a810ca1140025129b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoTransform&lt; EOT &gt; &amp;</type>
      <name>trans</name>
      <anchorfile>classpeo_seq_transform.html</anchorfile>
      <anchor>ad3e16c59dd6c46dfc1baf7b88af30cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>peoSyncIslandMig</name>
    <filename>classpeo_sync_island_mig.html</filename>
    <templarg>EOT</templarg>
    <base>Cooperative</base>
    <member kind="function">
      <type></type>
      <name>peoSyncIslandMig</name>
      <anchorfile>classpeo_sync_island_mig.html</anchorfile>
      <anchor>96b7b6de20b5e318a8b1cde76842305c</anchor>
      <arglist>(unsigned __frequency, eoSelect&lt; EOT &gt; &amp;__select, eoReplacement&lt; EOT &gt; &amp;__replace, Topology &amp;__topology, eoPop&lt; EOT &gt; &amp;__source, eoPop&lt; EOT &gt; &amp;__destination)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classpeo_sync_island_mig.html</anchorfile>
      <anchor>178476fd276f78b73607b33d19522c36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack</name>
      <anchorfile>classpeo_sync_island_mig.html</anchorfile>
      <anchor>e334188141eeba9f7b78bc6716f819ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpack</name>
      <anchorfile>classpeo_sync_island_mig.html</anchorfile>
      <anchor>85777bd9f709c5d4107799e8619948d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifySending</name>
      <anchorfile>classpeo_sync_island_mig.html</anchorfile>
      <anchor>8c427b3f91c19ff85f86930366b96008</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>emigrate</name>
      <anchorfile>classpeo_sync_island_mig.html</anchorfile>
      <anchor>4c8416e3acce1a6e4c3b0a442d94b063</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>immigrate</name>
      <anchorfile>classpeo_sync_island_mig.html</anchorfile>
      <anchor>38dd72312a3d16808af1aa7beb9ed4a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoPeriodicContinue&lt; EOT &gt;</type>
      <name>cont</name>
      <anchorfile>classpeo_sync_island_mig.html</anchorfile>
      <anchor>2d8ae9104376f3e073e0b250d9b425a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoSelect&lt; EOT &gt; &amp;</type>
      <name>select</name>
      <anchorfile>classpeo_sync_island_mig.html</anchorfile>
      <anchor>5e9c9f5f65d6418ad46e647ee1804a3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoReplacement&lt; EOT &gt; &amp;</type>
      <name>replace</name>
      <anchorfile>classpeo_sync_island_mig.html</anchorfile>
      <anchor>cb6d2d909503a86415912900d6e1d891</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Topology &amp;</type>
      <name>topology</name>
      <anchorfile>classpeo_sync_island_mig.html</anchorfile>
      <anchor>ebfe6edb6be16d46bf6d71cb233fcace</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoPop&lt; EOT &gt; &amp;</type>
      <name>source</name>
      <anchorfile>classpeo_sync_island_mig.html</anchorfile>
      <anchor>33fde1f09faf2a3f772d8b8f6a2615c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoPop&lt; EOT &gt; &amp;</type>
      <name>destination</name>
      <anchorfile>classpeo_sync_island_mig.html</anchorfile>
      <anchor>a9bf4612c7c04da6cf69245c6617e6a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::queue&lt; eoPop&lt; EOT &gt; &gt;</type>
      <name>imm</name>
      <anchorfile>classpeo_sync_island_mig.html</anchorfile>
      <anchor>088c1623f32668dcd3683fceff9426c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::queue&lt; eoPop&lt; EOT &gt; &gt;</type>
      <name>em</name>
      <anchorfile>classpeo_sync_island_mig.html</anchorfile>
      <anchor>11d6dd3e4a6db710433f501af0988322</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::queue&lt; Cooperative * &gt;</type>
      <name>coop_em</name>
      <anchorfile>classpeo_sync_island_mig.html</anchorfile>
      <anchor>2f7ca18d67ab7fb47a9851ab3179eb7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>sem_t</type>
      <name>sync</name>
      <anchorfile>classpeo_sync_island_mig.html</anchorfile>
      <anchor>91e0e1ea59c2a6a66eb496bddd60a18f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>peoSyncMultiStart</name>
    <filename>classpeo_sync_multi_start.html</filename>
    <templarg>EOT</templarg>
    <base>Service</base>
    <member kind="function">
      <type></type>
      <name>peoSyncMultiStart</name>
      <anchorfile>classpeo_sync_multi_start.html</anchorfile>
      <anchor>d29f94aad3c1f443bfffc8b6aee0704c</anchor>
      <arglist>(eoContinue&lt; EOT &gt; &amp;__cont, eoSelect&lt; EOT &gt; &amp;__select, eoReplacement&lt; EOT &gt; &amp;__replace, moAlgo&lt; EOT &gt; &amp;__ls, eoPop&lt; EOT &gt; &amp;__pop)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classpeo_sync_multi_start.html</anchorfile>
      <anchor>76385b33fe514f91cb83f0fbecbeb3c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packData</name>
      <anchorfile>classpeo_sync_multi_start.html</anchorfile>
      <anchor>8becfab1922b64708dca5a53e2932a5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpackData</name>
      <anchorfile>classpeo_sync_multi_start.html</anchorfile>
      <anchor>2903a441b77cded266b5fb651e17a5b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>execute</name>
      <anchorfile>classpeo_sync_multi_start.html</anchorfile>
      <anchor>a4d1c2943c290de540800087b54dc49b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packResult</name>
      <anchorfile>classpeo_sync_multi_start.html</anchorfile>
      <anchor>6c48eb0dae741cff7203b65e226f9616</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpackResult</name>
      <anchorfile>classpeo_sync_multi_start.html</anchorfile>
      <anchor>c3cbd1f10a89d1915c5ccf82a2c34a1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifySendingData</name>
      <anchorfile>classpeo_sync_multi_start.html</anchorfile>
      <anchor>32ec0d01d3fd8a9932abd68f4781fc94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifySendingAllResourceRequests</name>
      <anchorfile>classpeo_sync_multi_start.html</anchorfile>
      <anchor>fc90282cc4e93cdea8f82fd52dd78fb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoContinue&lt; EOT &gt; &amp;</type>
      <name>cont</name>
      <anchorfile>classpeo_sync_multi_start.html</anchorfile>
      <anchor>43f4fa9b125baef6fc8b968dfd16f437</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoSelect&lt; EOT &gt; &amp;</type>
      <name>select</name>
      <anchorfile>classpeo_sync_multi_start.html</anchorfile>
      <anchor>8fc9a3d046023ddd077defec3c23ab3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoReplacement&lt; EOT &gt; &amp;</type>
      <name>replace</name>
      <anchorfile>classpeo_sync_multi_start.html</anchorfile>
      <anchor>a375ccea98e9bf2a0854dac27df4522f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>moAlgo&lt; EOT &gt; &amp;</type>
      <name>ls</name>
      <anchorfile>classpeo_sync_multi_start.html</anchorfile>
      <anchor>4d317966de767dcc87eee0286ea7f95d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoPop&lt; EOT &gt; &amp;</type>
      <name>pop</name>
      <anchorfile>classpeo_sync_multi_start.html</anchorfile>
      <anchor>391178bd6b8a97a08ab4e345f070e967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoPop&lt; EOT &gt;</type>
      <name>sel</name>
      <anchorfile>classpeo_sync_multi_start.html</anchorfile>
      <anchor>dbcc1a069ec72ecd8d40c392640d84b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>eoPop&lt; EOT &gt;</type>
      <name>impr_sel</name>
      <anchorfile>classpeo_sync_multi_start.html</anchorfile>
      <anchor>ca10f6d258105e3c4f0d1660db5b7679</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EOT</type>
      <name>sol</name>
      <anchorfile>classpeo_sync_multi_start.html</anchorfile>
      <anchor>2c2ebe46470d1425f0409897deab435b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned</type>
      <name>idx</name>
      <anchorfile>classpeo_sync_multi_start.html</anchorfile>
      <anchor>64191ef79b7b589964ac9c3e23ae6718</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned</type>
      <name>num_term</name>
      <anchorfile>classpeo_sync_multi_start.html</anchorfile>
      <anchor>773eb9097550d9444f25ca8f48997a30</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>peoTransform</name>
    <filename>classpeo_transform.html</filename>
    <templarg>EOT</templarg>
    <base>Service</base>
  </compound>
  <compound kind="class">
    <name>ReactiveThread</name>
    <filename>class_reactive_thread.html</filename>
    <base>Thread</base>
    <member kind="function">
      <type></type>
      <name>ReactiveThread</name>
      <anchorfile>class_reactive_thread.html</anchorfile>
      <anchor>77381649429941c99a3e3d568113d6cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sleep</name>
      <anchorfile>class_reactive_thread.html</anchorfile>
      <anchor>8263c2a32d8c99a49a05f1a7717d4262</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wakeUp</name>
      <anchorfile>class_reactive_thread.html</anchorfile>
      <anchor>a724a54575de10f09cc03ab7aa4e59ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>sem_t</type>
      <name>sem</name>
      <anchorfile>class_reactive_thread.html</anchorfile>
      <anchor>915e5a42dc8cb1bcf6738d5fe883a4e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RingTopology</name>
    <filename>class_ring_topology.html</filename>
    <base>Topology</base>
    <member kind="function">
      <type>void</type>
      <name>setNeighbors</name>
      <anchorfile>class_ring_topology.html</anchorfile>
      <anchor>292a7746993788f96042f2f628cfcbc5</anchor>
      <arglist>(Cooperative *__mig, std::vector&lt; Cooperative * &gt; &amp;__from, std::vector&lt; Cooperative * &gt; &amp;__to)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RouteEval</name>
    <filename>class_route_eval.html</filename>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>class_route_eval.html</anchorfile>
      <anchor>e10bbe6f792e6f44405953de4f703901</anchor>
      <arglist>(Route &amp;__route)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RouteInit</name>
    <filename>class_route_init.html</filename>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>class_route_init.html</anchorfile>
      <anchor>b65a7137e114458faadb6a5510c001f7</anchor>
      <arglist>(Route &amp;__route)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Runner</name>
    <filename>class_runner.html</filename>
    <base>Communicable</base>
    <base>Thread</base>
    <member kind="function">
      <type></type>
      <name>Runner</name>
      <anchorfile>class_runner.html</anchorfile>
      <anchor>7acb8258c21da9daa62f9a177a2e5acd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>class_runner.html</anchorfile>
      <anchor>7dc4419051fcc5cc9dadd54ecc9cd47d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>waitStarting</name>
      <anchorfile>class_runner.html</anchorfile>
      <anchor>5bc239db2be753b77369fa9a038769fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocal</name>
      <anchorfile>class_runner.html</anchorfile>
      <anchor>40adbfb7d6944189b4fff60b02e669ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>terminate</name>
      <anchorfile>class_runner.html</anchorfile>
      <anchor>0f133e75c28fb8264549814f80608e68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>run</name>
      <anchorfile>class_runner.html</anchorfile>
      <anchor>2d306c1835d8710258d2b52b8cc8312c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>RUNNER_ID</type>
      <name>getID</name>
      <anchorfile>class_runner.html</anchorfile>
      <anchor>5026c74eec184e3a15cb3c0ec4200a57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packTermination</name>
      <anchorfile>class_runner.html</anchorfile>
      <anchor>2ad6d199d684d6f34347fc202ffe2fa3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifySendingTermination</name>
      <anchorfile>class_runner.html</anchorfile>
      <anchor>3591be473e0fcee1105fb57319b529aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>sem_t</type>
      <name>sem_start</name>
      <anchorfile>class_runner.html</anchorfile>
      <anchor>4b0827d5df2df632db4ab71dd55e81b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned</type>
      <name>id</name>
      <anchorfile>class_runner.html</anchorfile>
      <anchor>1989c1f8e0b0b54ad2e60a341007e59d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SEND_REQUEST</name>
    <filename>struct_s_e_n_d___r_e_q_u_e_s_t.html</filename>
    <member kind="variable">
      <type>Communicable *</type>
      <name>comm</name>
      <anchorfile>struct_s_e_n_d___r_e_q_u_e_s_t.html</anchorfile>
      <anchor>1ad8f7233fa3ff13262e783a9153920f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>to</name>
      <anchorfile>struct_s_e_n_d___r_e_q_u_e_s_t.html</anchorfile>
      <anchor>93e2a6a71d2a91aa2b7bdd050ee59b4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tag</name>
      <anchorfile>struct_s_e_n_d___r_e_q_u_e_s_t.html</anchorfile>
      <anchor>3126b3ef9d6533d3086760e413a7f23f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Service</name>
    <filename>class_service.html</filename>
    <base>Communicable</base>
    <member kind="function">
      <type>void</type>
      <name>setOwner</name>
      <anchorfile>class_service.html</anchorfile>
      <anchor>33b149b98498c0e7e401b0f0839d7f0d</anchor>
      <arglist>(Thread &amp;__owner)</arglist>
    </member>
    <member kind="function">
      <type>Thread *</type>
      <name>getOwner</name>
      <anchorfile>class_service.html</anchorfile>
      <anchor>0dae00309c51a7b7069788142aed799f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>requestResourceRequest</name>
      <anchorfile>class_service.html</anchorfile>
      <anchor>7e2ae35a9070a05dcd46488df649896d</anchor>
      <arglist>(unsigned __how_many=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packResourceRequest</name>
      <anchorfile>class_service.html</anchorfile>
      <anchor>c4289f98d1cd9ed53e850efbb6a947bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packData</name>
      <anchorfile>class_service.html</anchorfile>
      <anchor>aea4b8f7f8fb88e83862ee4bfd9ab207</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackData</name>
      <anchorfile>class_service.html</anchorfile>
      <anchor>3bd87b444710813d30fd754d4d0b4df3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>execute</name>
      <anchorfile>class_service.html</anchorfile>
      <anchor>e4f2894e6121e60f38d41cfbd7447ae4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packResult</name>
      <anchorfile>class_service.html</anchorfile>
      <anchor>e5e4f90b2315e15c2a2913bd370f4cf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackResult</name>
      <anchorfile>class_service.html</anchorfile>
      <anchor>45c06344edbfa482b91f68e2035a6099</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifySendingData</name>
      <anchorfile>class_service.html</anchorfile>
      <anchor>81ad4d6ebb50045b8977e2ab74826f30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifySendingResourceRequest</name>
      <anchorfile>class_service.html</anchorfile>
      <anchor>94e2012e76aaae3aa8199250f558d503</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifySendingAllResourceRequests</name>
      <anchorfile>class_service.html</anchorfile>
      <anchor>f94cc8a5c2665d4574041737e61e9ffc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Thread *</type>
      <name>owner</name>
      <anchorfile>class_service.html</anchorfile>
      <anchor>8b615c65c876f342fe8209eb7e36d7b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned</type>
      <name>num_sent_rr</name>
      <anchorfile>class_service.html</anchorfile>
      <anchor>a5b2ad9520bb3710b54348b99acebd58</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Thread</name>
    <filename>class_thread.html</filename>
    <member kind="function">
      <type></type>
      <name>Thread</name>
      <anchorfile>class_thread.html</anchorfile>
      <anchor>95c703fb8f2f27cb64f475a8c940864a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Thread</name>
      <anchorfile>class_thread.html</anchorfile>
      <anchor>37d9edd3a1a776cbc27dedff949c9726</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>start</name>
      <anchorfile>class_thread.html</anchorfile>
      <anchor>c667c1d8fd7243d669043e3dd762b567</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActive</name>
      <anchorfile>class_thread.html</anchorfile>
      <anchor>e197c46f8f62ecce6d2a7fe95bdc5b38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPassive</name>
      <anchorfile>class_thread.html</anchorfile>
      <anchor>20632ffe9ddfa2a478afb0c84dc1096b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>act</name>
      <anchorfile>class_thread.html</anchorfile>
      <anchor>1b155d63bca3096ac4a1d039aea83c7c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Topology</name>
    <filename>class_topology.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Topology</name>
      <anchorfile>class_topology.html</anchorfile>
      <anchor>3e447669757c8311c7f6f8edc705abf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>class_topology.html</anchorfile>
      <anchor>62bc46d8c20fdc71dad9e7c7a0d7aded</anchor>
      <arglist>(Cooperative &amp;__mig)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setNeighbors</name>
      <anchorfile>class_topology.html</anchorfile>
      <anchor>86c006ad698649b2ba5016a5ddd619ce</anchor>
      <arglist>(Cooperative *__mig, std::vector&lt; Cooperative * &gt; &amp;__from, std::vector&lt; Cooperative * &gt; &amp;__to)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Cooperative * &gt;</type>
      <name>mig</name>
      <anchorfile>class_topology.html</anchorfile>
      <anchor>247a2faa8568b678f0b7b11e62c7812c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TwoOpt</name>
    <filename>class_two_opt.html</filename>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>class_two_opt.html</anchorfile>
      <anchor>ff87d1649a33d42a6d64e8d314ed1af0</anchor>
      <arglist>(Route &amp;__route)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TwoOptIncrEval</name>
    <filename>class_two_opt_incr_eval.html</filename>
    <member kind="function">
      <type>int</type>
      <name>operator()</name>
      <anchorfile>class_two_opt_incr_eval.html</anchorfile>
      <anchor>48500077e651c4c6152daef8a396be39</anchor>
      <arglist>(const TwoOpt &amp;__move, const Route &amp;__route)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TwoOptInit</name>
    <filename>class_two_opt_init.html</filename>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>class_two_opt_init.html</anchorfile>
      <anchor>5bf6af064d37ebd955ffb5a623e78e1b</anchor>
      <arglist>(TwoOpt &amp;__move, const Route &amp;__route)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TwoOptNext</name>
    <filename>class_two_opt_next.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>class_two_opt_next.html</anchorfile>
      <anchor>baf229b2e056f39ab971cf2ac66a833e</anchor>
      <arglist>(TwoOpt &amp;__move, const Route &amp;__route)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TwoOptRand</name>
    <filename>class_two_opt_rand.html</filename>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>class_two_opt_rand.html</anchorfile>
      <anchor>e2f362f359517c027f6f22fba0aab375</anchor>
      <arglist>(TwoOpt &amp;__move, const Route &amp;__route)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Worker</name>
    <filename>class_worker.html</filename>
    <base>Communicable</base>
    <base>ReactiveThread</base>
    <member kind="function">
      <type></type>
      <name>Worker</name>
      <anchorfile>class_worker.html</anchorfile>
      <anchor>3754817df06ffe220f7f0d903c78ccac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>class_worker.html</anchorfile>
      <anchor>abcbbace05c6113f1959c494b3577291</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packResult</name>
      <anchorfile>class_worker.html</anchorfile>
      <anchor>83780920118e6c2b67d9477bdf8be248</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpackData</name>
      <anchorfile>class_worker.html</anchorfile>
      <anchor>bff2bdcd64fe5400156cc78704c64953</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packTaskDone</name>
      <anchorfile>class_worker.html</anchorfile>
      <anchor>60d2e8eba85b9ef403d94be54c391640</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifySendingResult</name>
      <anchorfile>class_worker.html</anchorfile>
      <anchor>e2f487014766a73c5788bdcfd58ad863</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifySendingTaskDone</name>
      <anchorfile>class_worker.html</anchorfile>
      <anchor>13efd6a8e275745329a4a8e23a0eb0bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSource</name>
      <anchorfile>class_worker.html</anchorfile>
      <anchor>5dab4ea663546b5a49d9398d7a624d27</anchor>
      <arglist>(int __rank)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WORKER_ID</type>
      <name>id</name>
      <anchorfile>class_worker.html</anchorfile>
      <anchor>b5ffcb995e12fa71b9551e91729d6972</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SERVICE_ID</type>
      <name>serv_id</name>
      <anchorfile>class_worker.html</anchorfile>
      <anchor>d7dc76e301fd2bcf5d3a2088a59f1378</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Service *</type>
      <name>serv</name>
      <anchorfile>class_worker.html</anchorfile>
      <anchor>454e1764ed165af733cc44a73e395692</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>src</name>
      <anchorfile>class_worker.html</anchorfile>
      <anchor>895c3ebc198018ea3391c09bc802d2f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>toto</name>
      <anchorfile>class_worker.html</anchorfile>
      <anchor>7ba5a18b2918cf9e704536b763be37f7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>peo</name>
    <filename>namespacepeo.html</filename>
    <member kind="function">
      <type>void</type>
      <name>finalize</name>
      <anchorfile>namespacepeo.html</anchorfile>
      <anchor>f90478489cc92d1e6abb222179163a30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>namespacepeo.html</anchorfile>
      <anchor>8184c3b1f7eecc68f69bb8e8b872a7d3</anchor>
      <arglist>(int &amp;__argc, char **&amp;__argv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadParameters</name>
      <anchorfile>namespacepeo.html</anchorfile>
      <anchor>2b496ee9b81d9ae322ae6edb9a93dc71</anchor>
      <arglist>(int &amp;__argc, char **&amp;__argv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>namespacepeo.html</anchorfile>
      <anchor>10819b2d60b37477c6a89b60c595c67c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>argc</name>
      <anchorfile>namespacepeo.html</anchorfile>
      <anchor>18a3998ce8b39c4e1143914fdd07b3d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char ***</type>
      <name>argv</name>
      <anchorfile>namespacepeo.html</anchorfile>
      <anchor>d07043237d4d923125e38860ba9bbe20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>argc</name>
      <anchorfile>namespacepeo.html</anchorfile>
      <anchor>18a3998ce8b39c4e1143914fdd07b3d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char ***</type>
      <name>argv</name>
      <anchorfile>namespacepeo.html</anchorfile>
      <anchor>d07043237d4d923125e38860ba9bbe20</anchor>
      <arglist></arglist>
    </member>
  </compound>
</tagfile>
