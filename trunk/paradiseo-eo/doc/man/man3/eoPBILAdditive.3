.TH "eoPBILAdditive" 3 "19 Oct 2006" "Version 0.9.4-cvs" "EO" \" -*- nroff -*-
.ad l
.nh
.SH NAME
eoPBILAdditive \- Distribution Class for PBIL algorithm (Population-Based Incremental Learning, Baluja and Caruana 96).  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <eoPBILAdditive.h>\fP
.PP
Inherits \fBeoDistribUpdater< EOT >< EOT >\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBeoPBILAdditive\fP (double _LRBest, unsigned _nbBest=1, double _tolerance=0.0, double _LRWorst=0.0, unsigned _nbWorst=0)"
.br
.RI "\fICtor with parameters using the default values is equivalent to using \fBeoPBILOrg\fP. \fP"
.ti -1c
.RI "virtual void \fBoperator()\fP (\fBeoDistribution\fP< \fBEOT\fP > &_distrib, \fBeoPop\fP< \fBEOT\fP > &_pop)"
.br
.RI "\fIUpdate the distribution from the current population. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "double \fBmaxBound\fP"
.br
.ti -1c
.RI "double \fBminBound\fP"
.br
.ti -1c
.RI "double \fBLR\fP"
.br
.ti -1c
.RI "unsigned \fBnbBest\fP"
.br
.ti -1c
.RI "unsigned \fBnbWorst\fP"
.br
.ti -1c
.RI "double \fBlrb\fP"
.br
.ti -1c
.RI "double \fBlrw\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class EOT> class eoPBILAdditive< EOT >"
Distribution Class for PBIL algorithm (Population-Based Incremental Learning, Baluja and Caruana 96). 

This class implements an extended update rule: in the original paper, the authors used
.PP
p(i)(t+1) = (1-LR)*p(i)(t) + LR*best(i)
.PP
here the same formula is applied, with some of the best individuals and for some of the worst individuals (with different learning rates) 
.PP
Definition at line 46 of file eoPBILAdditive.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for EO from the source code.
