.TH "moeoNormalizedSolutionVsSolutionBinaryMetric" 3 "17 Apr 2007" "Version 1.0.alpha" "ParadisEO-MOEO" \" -*- nroff -*-
.ad l
.nh
.SH NAME
moeoNormalizedSolutionVsSolutionBinaryMetric \- Base class for binary metrics dedicated to the performance comparison between two solutions's objective vectors using normalized values.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <moeoNormalizedSolutionVsSolutionBinaryMetric.h>\fP
.PP
Inherits \fBmoeoSolutionVsSolutionBinaryMetric< ObjectiveVector, R >< ObjectiveVector, R >\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmoeoNormalizedSolutionVsSolutionBinaryMetric\fP ()"
.br
.RI "\fIDefault ctr for any \fBmoeoNormalizedSolutionVsSolutionBinaryMetric\fP object. \fP"
.ti -1c
.RI "void \fBsetup\fP (double _min, double _max, unsigned _obj)"
.br
.RI "\fISets the lower bound (_min) and the upper bound (_max) for the objective _obj _min lower bound _max upper bound _obj the objective index. \fP"
.ti -1c
.RI "virtual void \fBsetup\fP (\fBeoRealInterval\fP _realInterval, unsigned _obj)"
.br
.RI "\fISets the lower bound and the upper bound for the objective _obj using a \fBeoRealInterval\fP object _realInterval the \fBeoRealInterval\fP object _obj the objective index. \fP"
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static double \fBtiny\fP ()"
.br
.RI "\fIReturns a very small value that can be used to avoid extreme cases (where the min bound == the max bound). \fP"
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "std::vector< \fBeoRealInterval\fP > \fBbounds\fP"
.br
.RI "\fIthe bounds for every objective (bounds[i] = bounds for the objective i) \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class ObjectiveVector, class R> class moeoNormalizedSolutionVsSolutionBinaryMetric< ObjectiveVector, R >"
Base class for binary metrics dedicated to the performance comparison between two solutions's objective vectors using normalized values. 

Then, indicator values lie in the interval [-1,1]. Note that you have to set the bounds for every objective before using the operator(). 
.PP
Definition at line 26 of file moeoNormalizedSolutionVsSolutionBinaryMetric.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for ParadisEO-MOEO from the source code.
