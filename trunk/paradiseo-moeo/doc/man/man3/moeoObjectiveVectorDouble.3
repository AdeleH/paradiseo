.TH "moeoObjectiveVectorDouble" 3 "26 Jun 2007" "Version 1.0-beta" "ParadisEO-MOEO" \" -*- nroff -*-
.ad l
.nh
.SH NAME
moeoObjectiveVectorDouble \- This class allows to represent a solution in the objective space (phenotypic representation) by a std::vector of doubles, i.e.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <moeoObjectiveVectorDouble.h>\fP
.PP
Inherits \fBmoeoObjectiveVector< ObjectiveVectorTraits, double >\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmoeoObjectiveVectorDouble\fP (double _value=0.0)"
.br
.RI "\fICtor. \fP"
.ti -1c
.RI "\fBmoeoObjectiveVectorDouble\fP (std::vector< double > &_v)"
.br
.RI "\fICtor from a vector of doubles. \fP"
.ti -1c
.RI "bool \fBdominates\fP (const \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits > &_other) const "
.br
.RI "\fIReturns true if the current objective vector dominates _other according to the Pareto dominance relation (but it's better to use a \fBmoeoObjectiveVectorComparator\fP object to compare solutions). \fP"
.ti -1c
.RI "bool \fBoperator==\fP (const \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits > &_other) const "
.br
.RI "\fIReturns true if the current objective vector is equal to _other (according to a tolerance value). \fP"
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits > &_other) const "
.br
.RI "\fIReturns true if the current objective vector is different than _other (according to a tolerance value). \fP"
.ti -1c
.RI "bool \fBoperator<\fP (const \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits > &_other) const "
.br
.RI "\fIReturns true if the current objective vector is smaller than _other on the first objective, then on the second, and so on (can be usefull for sorting/printing). \fP"
.ti -1c
.RI "bool \fBoperator>\fP (const \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits > &_other) const "
.br
.RI "\fIReturns true if the current objective vector is greater than _other on the first objective, then on the second, and so on (can be usefull for sorting/printing). \fP"
.ti -1c
.RI "bool \fBoperator<=\fP (const \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits > &_other) const "
.br
.RI "\fIReturns true if the current objective vector is smaller than or equal to _other on the first objective, then on the second, and so on (can be usefull for sorting/printing). \fP"
.ti -1c
.RI "bool \fBoperator>=\fP (const \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits > &_other) const "
.br
.RI "\fIReturns true if the current objective vector is greater than or equal to _other on the first objective, then on the second, and so on (can be usefull for sorting/printing). \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class ObjectiveVectorTraits> class moeoObjectiveVectorDouble< ObjectiveVectorTraits >"
This class allows to represent a solution in the objective space (phenotypic representation) by a std::vector of doubles, i.e. 

that an objective value is represented using a double, and this for any objective. 
.PP
Definition at line 27 of file moeoObjectiveVectorDouble.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class ObjectiveVectorTraits> \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits >::\fBmoeoObjectiveVectorDouble\fP (std::vector< double > & _v)\fC [inline]\fP"
.PP
Ctor from a vector of doubles. 
.PP
\fBParameters:\fP
.RS 4
\fI_v\fP the std::vector < double > 
.RE
.PP

.PP
Definition at line 45 of file moeoObjectiveVectorDouble.h.
.SH "Member Function Documentation"
.PP 
.SS "template<class ObjectiveVectorTraits> bool \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits >::dominates (const \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits > & _other) const\fC [inline]\fP"
.PP
Returns true if the current objective vector dominates _other according to the Pareto dominance relation (but it's better to use a \fBmoeoObjectiveVectorComparator\fP object to compare solutions). 
.PP
\fBParameters:\fP
.RS 4
\fI_other\fP the other \fBmoeoObjectiveVectorDouble\fP object to compare with 
.RE
.PP

.PP
Definition at line 54 of file moeoObjectiveVectorDouble.h.
.SS "template<class ObjectiveVectorTraits> bool \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits >::operator== (const \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits > & _other) const\fC [inline]\fP"
.PP
Returns true if the current objective vector is equal to _other (according to a tolerance value). 
.PP
\fBParameters:\fP
.RS 4
\fI_other\fP the other \fBmoeoObjectiveVectorDouble\fP object to compare with 
.RE
.PP

.PP
Definition at line 65 of file moeoObjectiveVectorDouble.h.
.PP
Referenced by moeoObjectiveVectorDouble< ObjectiveVectorTraits >::operator!=(), and moeoObjectiveVectorDouble< ObjectiveVectorTraits >::operator>=().
.SS "template<class ObjectiveVectorTraits> bool \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits >::operator!= (const \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits > & _other) const\fC [inline]\fP"
.PP
Returns true if the current objective vector is different than _other (according to a tolerance value). 
.PP
\fBParameters:\fP
.RS 4
\fI_other\fP the other \fBmoeoObjectiveVectorDouble\fP object to compare with 
.RE
.PP

.PP
Definition at line 82 of file moeoObjectiveVectorDouble.h.
.PP
References moeoObjectiveVectorDouble< ObjectiveVectorTraits >::operator==().
.SS "template<class ObjectiveVectorTraits> bool \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits >::operator< (const \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits > & _other) const\fC [inline]\fP"
.PP
Returns true if the current objective vector is smaller than _other on the first objective, then on the second, and so on (can be usefull for sorting/printing). 
.PP
\fBParameters:\fP
.RS 4
\fI_other\fP the other \fBmoeoObjectiveVectorDouble\fP object to compare with 
.RE
.PP

.PP
Definition at line 93 of file moeoObjectiveVectorDouble.h.
.PP
Referenced by moeoObjectiveVectorDouble< ObjectiveVectorTraits >::operator<=().
.SS "template<class ObjectiveVectorTraits> bool \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits >::operator> (const \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits > & _other) const\fC [inline]\fP"
.PP
Returns true if the current objective vector is greater than _other on the first objective, then on the second, and so on (can be usefull for sorting/printing). 
.PP
\fBParameters:\fP
.RS 4
\fI_other\fP the other \fBmoeoObjectiveVectorDouble\fP object to compare with 
.RE
.PP

.PP
Definition at line 105 of file moeoObjectiveVectorDouble.h.
.PP
Referenced by moeoObjectiveVectorDouble< ObjectiveVectorTraits >::operator>=().
.SS "template<class ObjectiveVectorTraits> bool \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits >::operator<= (const \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits > & _other) const\fC [inline]\fP"
.PP
Returns true if the current objective vector is smaller than or equal to _other on the first objective, then on the second, and so on (can be usefull for sorting/printing). 
.PP
\fBParameters:\fP
.RS 4
\fI_other\fP the other \fBmoeoObjectiveVectorDouble\fP object to compare with 
.RE
.PP

.PP
Definition at line 116 of file moeoObjectiveVectorDouble.h.
.PP
References moeoObjectiveVectorDouble< ObjectiveVectorTraits >::operator<().
.SS "template<class ObjectiveVectorTraits> bool \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits >::operator>= (const \fBmoeoObjectiveVectorDouble\fP< ObjectiveVectorTraits > & _other) const\fC [inline]\fP"
.PP
Returns true if the current objective vector is greater than or equal to _other on the first objective, then on the second, and so on (can be usefull for sorting/printing). 
.PP
\fBParameters:\fP
.RS 4
\fI_other\fP the other \fBmoeoObjectiveVectorDouble\fP object to compare with 
.RE
.PP

.PP
Definition at line 127 of file moeoObjectiveVectorDouble.h.
.PP
References moeoObjectiveVectorDouble< ObjectiveVectorTraits >::operator==(), and moeoObjectiveVectorDouble< ObjectiveVectorTraits >::operator>().

.SH "Author"
.PP 
Generated automatically by Doxygen for ParadisEO-MOEO from the source code.
