.TH "moILS" 3 "23 Oct 2007" "Version 1.0" "ParadisEO-MOMovingObjects" \" -*- nroff -*-
.ad l
.nh
.SH NAME
moILS \- Iterated Local Search (ILS).  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <moILS.h>\fP
.PP
Inherits \fBmoAlgo< M::EOType >\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmoILS\fP (\fBmoAlgo\fP< \fBEOT\fP > &__algo, \fBmoSolContinue\fP< \fBEOT\fP > &__continue, \fBmoComparator\fP< \fBEOT\fP > &__acceptance_criterion, \fBeoMonOp\fP< \fBEOT\fP > &__perturbation, \fBeoEvalFunc\fP< \fBEOT\fP > &__full_eval)"
.br
.RI "\fIGeneric constructor. \fP"
.ti -1c
.RI "\fBmoILS\fP (\fBmoMoveInit\fP< M > &__move_init, \fBmoNextMove\fP< M > &__next_move, \fBmoMoveIncrEval\fP< M > &__incr_eval, \fBmoMoveSelect\fP< M > &__move_select, \fBmoSolContinue\fP< \fBEOT\fP > &__continue, \fBmoComparator\fP< \fBEOT\fP > &__acceptance_criterion, \fBeoMonOp\fP< \fBEOT\fP > &__perturbation, \fBeoEvalFunc\fP< \fBEOT\fP > &__full_eval)"
.br
.RI "\fIConstructor for using a \fBmoHC\fP for the \fBmoAlgo\fP. \fP"
.ti -1c
.RI "\fBmoILS\fP (\fBmoMoveInit\fP< M > &__move_init, \fBmoNextMove\fP< M > &__next_move, \fBmoMoveIncrEval\fP< M > &__incr_eval, \fBmoTabuList\fP< M > &__tabu_list, \fBmoAspirCrit\fP< M > &__aspir_crit, \fBmoSolContinue\fP< \fBEOT\fP > &__moTS_continue, \fBmoSolContinue\fP< \fBEOT\fP > &__continue, \fBmoComparator\fP< \fBEOT\fP > &__acceptance_criterion, \fBeoMonOp\fP< \fBEOT\fP > &__perturbation, \fBeoEvalFunc\fP< \fBEOT\fP > &__full_eval)"
.br
.RI "\fIConstructor for using a \fBmoTS\fP for the \fBmoAlgo\fP. \fP"
.ti -1c
.RI "\fBmoILS\fP (\fBmoRandMove\fP< M > &__move_rand, \fBmoMoveIncrEval\fP< M > &__incr_eval, \fBmoSolContinue\fP< \fBEOT\fP > &__moSA_continue, double __init_temp, \fBmoCoolingSchedule\fP &__cool_sched, \fBmoSolContinue\fP< \fBEOT\fP > &__continue, \fBmoComparator\fP< \fBEOT\fP > &__acceptance_criterion, \fBeoMonOp\fP< \fBEOT\fP > &__perturbation, \fBeoEvalFunc\fP< \fBEOT\fP > &__full_eval)"
.br
.RI "\fIConstructor for using a \fBmoSA\fP for the \fBmoAlgo\fP. \fP"
.ti -1c
.RI "bool \fBoperator()\fP (\fBEOT\fP &__sol)"
.br
.RI "\fI\fBFunction\fP which launches the ILS. \fP"
.in -1c
.SS "Private Types"

.in +1c
.ti -1c
.RI "typedef M::EOType \fBEOT\fP"
.br
.RI "\fIAlias for the type. \fP"
.ti -1c
.RI "typedef EOT::Fitness \fBFitness\fP"
.br
.RI "\fIAlias for the fitness. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBmoAlgo\fP< \fBEOT\fP > & \fBalgo\fP"
.br
.RI "\fIThe solution based heuristic. \fP"
.ti -1c
.RI "\fBmoSolContinue\fP< \fBEOT\fP > & \fBcont\fP"
.br
.RI "\fIThe stopping criterion. \fP"
.ti -1c
.RI "\fBmoComparator\fP< \fBEOT\fP > & \fBacceptance_criterion\fP"
.br
.RI "\fIThe acceptance criterion. \fP"
.ti -1c
.RI "\fBeoMonOp\fP< \fBEOT\fP > & \fBperturbation\fP"
.br
.RI "\fIThe perturbation generator. \fP"
.ti -1c
.RI "\fBeoEvalFunc\fP< \fBEOT\fP > & \fBfull_eval\fP"
.br
.RI "\fIThe full evaluation function. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class M> class moILS< M >"
Iterated Local Search (ILS). 

Class which describes the algorithm for a iterated local search. 
.PP
Definition at line 50 of file moILS.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class M> \fBmoILS\fP< M >::\fBmoILS\fP (\fBmoAlgo\fP< \fBEOT\fP > & __algo, \fBmoSolContinue\fP< \fBEOT\fP > & __continue, \fBmoComparator\fP< \fBEOT\fP > & __acceptance_criterion, \fBeoMonOp\fP< \fBEOT\fP > & __perturbation, \fBeoEvalFunc\fP< \fBEOT\fP > & __full_eval)\fC [inline]\fP"
.PP
Generic constructor. 
.PP
Generic constructor using a \fBmoAlgo\fP
.PP
\fBParameters:\fP
.RS 4
\fI__algo\fP The solution based heuristic to use. 
.br
\fI__continue\fP The stopping criterion. 
.br
\fI__acceptance_criterion\fP The acceptance criterion. 
.br
\fI__perturbation\fP The pertubation generator. 
.br
\fI__full_eval\fP The evaluation function. 
.RE
.PP

.PP
Definition at line 71 of file moILS.h.
.SS "template<class M> \fBmoILS\fP< M >::\fBmoILS\fP (\fBmoMoveInit\fP< M > & __move_init, \fBmoNextMove\fP< M > & __next_move, \fBmoMoveIncrEval\fP< M > & __incr_eval, \fBmoMoveSelect\fP< M > & __move_select, \fBmoSolContinue\fP< \fBEOT\fP > & __continue, \fBmoComparator\fP< \fBEOT\fP > & __acceptance_criterion, \fBeoMonOp\fP< \fBEOT\fP > & __perturbation, \fBeoEvalFunc\fP< \fBEOT\fP > & __full_eval)\fC [inline]\fP"
.PP
Constructor for using a \fBmoHC\fP for the \fBmoAlgo\fP. 
.PP
\fBParameters:\fP
.RS 4
\fI__move_init\fP The move initialisation (for the \fBmoHC\fP). 
.br
\fI__next_move\fP The move generator (for the \fBmoHC\fP). 
.br
\fI__incr_eval\fP The partial evaluation function (for the \fBmoHC\fP). 
.br
\fI__move_select\fP The move selection strategy (for the \fBmoHC\fP). 
.br
\fI__continue\fP The stopping criterion. 
.br
\fI__acceptance_criterion\fP The acceptance criterion. 
.br
\fI__perturbation\fP The pertubation generator. 
.br
\fI__full_eval\fP The evaluation function. 
.RE
.PP

.PP
Definition at line 87 of file moILS.h.
.SS "template<class M> \fBmoILS\fP< M >::\fBmoILS\fP (\fBmoMoveInit\fP< M > & __move_init, \fBmoNextMove\fP< M > & __next_move, \fBmoMoveIncrEval\fP< M > & __incr_eval, \fBmoTabuList\fP< M > & __tabu_list, \fBmoAspirCrit\fP< M > & __aspir_crit, \fBmoSolContinue\fP< \fBEOT\fP > & __moTS_continue, \fBmoSolContinue\fP< \fBEOT\fP > & __continue, \fBmoComparator\fP< \fBEOT\fP > & __acceptance_criterion, \fBeoMonOp\fP< \fBEOT\fP > & __perturbation, \fBeoEvalFunc\fP< \fBEOT\fP > & __full_eval)\fC [inline]\fP"
.PP
Constructor for using a \fBmoTS\fP for the \fBmoAlgo\fP. 
.PP
\fBParameters:\fP
.RS 4
\fI__move_init\fP The move initialisation (for the \fBmoTS\fP). 
.br
\fI__next_move\fP The move generator (for the \fBmoTS\fP). 
.br
\fI__incr_eval\fP The partial evaluation function (for the \fBmoTS\fP). 
.br
\fI__tabu_list\fP The tabu list (for the \fBmoTS\fP !!!!). 
.br
\fI__aspir_crit\fP The aspiration criterion (for the \fBmoTS\fP). 
.br
\fI__moTS_continue\fP The stopping criterion (for the \fBmoTS\fP). 
.br
\fI__continue\fP The stopping criterion. 
.br
\fI__acceptance_criterion\fP The acceptance criterion. 
.br
\fI__perturbation\fP The pertubation generator. 
.br
\fI__full_eval\fP The evaluation function. 
.RE
.PP

.PP
Definition at line 107 of file moILS.h.
.SS "template<class M> \fBmoILS\fP< M >::\fBmoILS\fP (\fBmoRandMove\fP< M > & __move_rand, \fBmoMoveIncrEval\fP< M > & __incr_eval, \fBmoSolContinue\fP< \fBEOT\fP > & __moSA_continue, double __init_temp, \fBmoCoolingSchedule\fP & __cool_sched, \fBmoSolContinue\fP< \fBEOT\fP > & __continue, \fBmoComparator\fP< \fBEOT\fP > & __acceptance_criterion, \fBeoMonOp\fP< \fBEOT\fP > & __perturbation, \fBeoEvalFunc\fP< \fBEOT\fP > & __full_eval)\fC [inline]\fP"
.PP
Constructor for using a \fBmoSA\fP for the \fBmoAlgo\fP. 
.PP
\fBParameters:\fP
.RS 4
\fI__move_rand\fP The random move generator (for the \fBmoSA\fP). 
.br
\fI__incr_eval\fP The partial evaluation function (for the \fBmoSA\fP). 
.br
\fI__moSA_continue\fP The stopping criterion (for the \fBmoSA\fP). 
.br
\fI__init_temp\fP The initial temperature (for the \fBmoSA\fP). 
.br
\fI__cool_sched\fP The cooling scheduler (for the \fBmoSA\fP). 
.br
\fI__continue\fP The stopping criterion. 
.br
\fI__acceptance_criterion\fP The acceptance criterion. 
.br
\fI__perturbation\fP The pertubation generator. 
.br
\fI__full_eval\fP The evaluation function. 
.RE
.PP

.PP
Definition at line 127 of file moILS.h.
.SH "Member Function Documentation"
.PP 
.SS "template<class M> bool \fBmoILS\fP< M >::operator() (\fBEOT\fP & __sol)\fC [inline, virtual]\fP"
.PP
\fBFunction\fP which launches the ILS. 
.PP
The ILS has to improve a current solution. As the \fBmoSA\fP, the \fBmoTS\fP and the \fBmoHC\fP, it can be used for HYBRIDATION in an evolutionnary algorithm.
.PP
\fBParameters:\fP
.RS 4
\fI__sol\fP a current solution to improve. 
.RE
.PP
\fBReturns:\fP
.RS 4
TRUE. 
.RE
.PP

.PP
Implements \fBeoUF< M::EOType &, bool >\fP.
.PP
Definition at line 144 of file moILS.h.
.PP
References moILS< M >::acceptance_criterion, moILS< M >::algo, moILS< M >::cont, moILS< M >::full_eval, and moILS< M >::perturbation.

.SH "Author"
.PP 
Generated automatically by Doxygen for ParadisEO-MOMovingObjects from the source code.
