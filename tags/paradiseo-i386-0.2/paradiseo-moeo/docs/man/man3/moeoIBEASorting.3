.TH "moeoIBEASorting" 3 "15 Jan 2007" "Version 0.1" "ParadisEO-MOEO" \" -*- nroff -*-
.ad l
.nh
.SH NAME
moeoIBEASorting \- Functor The sorting phase of IBEA (Indicator-Based Evolutionary Algorithm) without uncertainty Adapted from the Zitzler and Künzli paper 'Indicator-Based Selection in Multiobjective Search' (2004) Of course, Fitness needs to be an \fBeoParetoFitness\fP object.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <moeoIBEA.h>\fP
.PP
Inherits \fBmoeoIBEA< EOT, Fitness >< EOT, Fitness >\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmoeoIBEASorting\fP (\fBmoeoBinaryQualityIndicator\fP< Fitness > *_I, const double _kappa)"
.br
.RI "\fIconstructor \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBsetBounds\fP (const \fBeoPop\fP< EOT > &_pop)"
.br
.RI "\fIcomputation and setting of the bounds for each objective \fP"
.ti -1c
.RI "void \fBfitnesses\fP (const \fBeoPop\fP< EOT > &_pop)"
.br
.RI "\fIcomputation and setting of the fitness for each individual of the population \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "double \fBkappa\fP"
.br
.RI "\fIscaling factor kappa \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class EOT, class Fitness = typename EOT::Fitness> class moeoIBEASorting< EOT, Fitness >"
Functor The sorting phase of IBEA (Indicator-Based Evolutionary Algorithm) without uncertainty Adapted from the Zitzler and Künzli paper 'Indicator-Based Selection in Multiobjective Search' (2004) Of course, Fitness needs to be an \fBeoParetoFitness\fP object. 
.PP
Definition at line 84 of file moeoIBEA.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class EOT, class Fitness = typename EOT::Fitness> \fBmoeoIBEASorting\fP< EOT, Fitness >::\fBmoeoIBEASorting\fP (\fBmoeoBinaryQualityIndicator\fP< Fitness > * _I, const double _kappa)\fC [inline]\fP"
.PP
constructor 
.PP
\fBParameters:\fP
.RS 4
\fIeoBinaryQualityIndicator<EOT>*\fP _I the binary quality indicator to use in the selection process 
.br
\fIdouble\fP _kappa scaling factor kappa 
.RE
.PP

.PP
Definition at line 96 of file moeoIBEA.h.
.PP
References moeoIBEASorting< EOT, Fitness >::kappa.
.SH "Member Function Documentation"
.PP 
.SS "template<class EOT, class Fitness = typename EOT::Fitness> void \fBmoeoIBEASorting\fP< EOT, Fitness >::setBounds (const \fBeoPop\fP< EOT > & _pop)\fC [inline, private, virtual]\fP"
.PP
computation and setting of the bounds for each objective 
.PP
\fBParameters:\fP
.RS 4
\fIconst\fP eoPop<EOT>& _pop the population 
.RE
.PP

.PP
Implements \fBmoeoIBEA< EOT, Fitness >\fP.
.PP
Definition at line 121 of file moeoIBEA.h.
.PP
References moeoIBEA< EOT, Fitness >::I, and moeoBinaryQualityIndicator< EOFitness >::setBounds().
.SS "template<class EOT, class Fitness = typename EOT::Fitness> void \fBmoeoIBEASorting\fP< EOT, Fitness >::fitnesses (const \fBeoPop\fP< EOT > & _pop)\fC [inline, private, virtual]\fP"
.PP
computation and setting of the fitness for each individual of the population 
.PP
\fBParameters:\fP
.RS 4
\fIconst\fP eoPop<EOT>& _pop the population 
.RE
.PP

.PP
Implements \fBmoeoIBEA< EOT, Fitness >\fP.
.PP
Definition at line 150 of file moeoIBEA.h.
.PP
References moeoIBEASorting< EOT, Fitness >::kappa, and eoValueParam< std::vector< WorthT > >::value().

.SH "Author"
.PP 
Generated automatically by Doxygen for ParadisEO-MOEO from the source code.
